package com.mastertechsoftware.twitteriffic.activities;

import com.mastertechsoftware.twitteriffic.R;
import com.mastertechsoftware.twitteriffic.models.Login;
import com.mastertechsoftware.twitteriffic.server.Response;
import com.mastertechsoftware.twitteriffic.server.ServerAPI;
import com.mastertechsoftware.twitteriffic.server.ServerResponseCallback;
import com.mastertechsoftware.twitteriffic.utils.Prefs;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.inputmethod.EditorInfo;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

/**
 * NOTE: This was auto-generated by AS. I've removed most of the code
 * but all the fields are named
 * A login screen that offers login via email/password.
 */
public class LoginActivity extends AppCompatActivity {

	/**
	 * Keep track of the login task to ensure we can cancel it if requested.
	 */

	// UI references.
	private AutoCompleteTextView mUserNameView;
	private EditText mPasswordView;
	private View mProgressView;
	private View mLoginFormView;
	private ServerAPI serverAPI;
	private Button mUserNameSignInButton;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_login);
		// Set up the login form.
		mUserNameView = (AutoCompleteTextView) findViewById(R.id.username);

		mPasswordView = (EditText) findViewById(R.id.password);
		mPasswordView.setOnEditorActionListener(new TextView.OnEditorActionListener() {
			@Override
			public boolean onEditorAction(TextView textView, int actionId, KeyEvent keyEvent) {
				if (actionId == EditorInfo.IME_ACTION_DONE) {
					attemptLogin();
					return true;
				}
				return false;
			}
		});

		mUserNameSignInButton = (Button) findViewById(R.id.username_sign_in_button);
		mUserNameSignInButton.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View view) {
				attemptLogin();
			}
		});

		mLoginFormView = findViewById(R.id.login_form);
		mProgressView = findViewById(R.id.login_progress);
		serverAPI = new ServerAPI();
	}



	/**
	 * Attempts to sign in or register the account specified by the login form.
	 * If there are form errors (invalid email, missing fields, etc.), the
	 * errors are presented and no actual login attempt is made.
	 */
	private void attemptLogin() {

		mUserNameSignInButton.setEnabled(false);
		// Reset errors.
		mUserNameView.setError(null);
		mPasswordView.setError(null);

		// Store values at the time of the login attempt.
		String email = mUserNameView.getText().toString();
		String password = mPasswordView.getText().toString();

		boolean cancel = false;
		View focusView = null;


		// Check for a valid email address.
		if (TextUtils.isEmpty(email)) {
			mUserNameView.setError(getString(R.string.error_field_required));
			focusView = mUserNameView;
			cancel = true;
		} else if (TextUtils.isEmpty(email)) {
			mPasswordView.setError(getString(R.string.error_field_required));
			focusView = mPasswordView;
			cancel = true;
		}

		if (cancel) {
			// There was an error; don't attempt login and focus the first
			// form field with an error.
			focusView.requestFocus();
			mUserNameSignInButton.setEnabled(true);
		} else {
			// Show a progress spinner, and kick off a background task to
			// perform the user login attempt.
			showProgress(true);
			serverAPI.login(new Login(email, password), new ServerResponseCallback<Login>() {
				@Override
				public void onSuccess(Response<Login> response) {
					showProgress(false);
					Prefs.getPrefs().putBoolean(MainActivity.LOGGED_IN, true);
					Prefs.getPrefs().putString(MainActivity.USER_NAME, response.getData().getUsername());
					finish();
					startMainActivity();
				}

				@Override
				public void onFailure(Response<Login> response) {
					showProgress(false);
					mUserNameView.setError(getString(R.string.invalid_username_password));
					mUserNameSignInButton.setEnabled(true);
				}
			});
		}
	}

	private void startMainActivity() {
		Intent intent = new Intent(this, MainActivity.class);
		startActivity(intent);
	}


	/**
	 * Shows the progress UI and hides the login form.
	 */
	private void showProgress(final boolean show) {
		int shortAnimTime = getResources().getInteger(android.R.integer.config_shortAnimTime);

		mLoginFormView.setVisibility(show ? View.GONE : View.VISIBLE);
		mLoginFormView.animate().setDuration(shortAnimTime).alpha(
				show ? 0 : 1).setListener(new AnimatorListenerAdapter() {
			@Override
			public void onAnimationEnd(Animator animation) {
				mLoginFormView.setVisibility(show ? View.GONE : View.VISIBLE);
			}
		});

		mProgressView.setVisibility(show ? View.VISIBLE : View.GONE);
		mProgressView.animate().setDuration(shortAnimTime).alpha(
				show ? 1 : 0).setListener(new AnimatorListenerAdapter() {
			@Override
			public void onAnimationEnd(Animator animation) {
				mProgressView.setVisibility(show ? View.VISIBLE : View.GONE);
			}
		});
	}


}

